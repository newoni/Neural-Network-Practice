List of files

1. practice01.py
  page 20
  Feature scaling. 
    - sklearn 모듈의 preprocessing 사용

2. practice02.py
  page 21
  Keras Feature engineering 
    - keras 모듈의 ImageDataGenerator 사용
    - 이미지 부풀리기
    
3. practice03.py
  page 23
  Supervised learning algorithms
     - sklearn의 LinearRegreesion 사용
     - sklearndml.metrics의 meansquared_error 사용

4. pratice04.py
  page 25
  Evaluating the model
    - sklearn의 train_test_split
    - scaling 이후, Linear Regression.
    - practice03과 다른점. train_test_split 사용. (practice03은 수동으로 나누어줌)

5. practice05.py
  page 32
  Implementing a perceptron
    - DataFrame, np.random.randn, pd.concat 으로 가상 데이터 분포 만들기.
    - seaborn.scatterplot 사용
    - 기본 perceptron numpy 구현

6. practice06.py
  page 39
  Implementing perceptron in keras
    - practice05.py 와 같은 데이터
    - keras로 practice05.py 구현
    - sklearn.metrics의 roc_auc_score 사용.

7. practice07.py
  page 49
  Keras Implementation
    - 간단한 Keras 

8. practice08.py
  page 52
  The XOR problem
    - XOR data problem data 생성
    - matplotlib.pyplot의 scatter 사용(alpha)
    - matplotlib.pyplot의 colorbar 

9. practice09.py
  page 54
  FFNN in python from scratch
    - practice08.py 와 같은 데이터 생성
    - 결과물이 만족스럽지 않음.
    - FFNN class 만들어서 propagation, back propagation 구현
    - 내 생각에, hidden size가 layer 수가 2개가 아니라, 1개의 hidden layer에 neuron 수가 2개임.
    - 출력 layer 수도 이상함. (2가 아니라, 1이 맞다고 생각)
    - 차후 수정 하기.
    - confusion maxtrix 이용.(from sklearn.metrics import confusion_matrix)
    - 이외의 metrics로 MSE(mean squared error), AUC(roc auc score) 활용

10. practice10.py
  page 58
   FFNN Keras implementaion
    - practice08.py와 같은 데이터 생성
    - 마찬가지로 hidden layer가 하나만 있다고 판단되
    - Dense를 하나 더 추가하면 결과가 더 만족스러움
    - MSE 의미를 더 잘 생각해보기, 결과값 출력을 더 깔끔하게 할 수 있는 방법 생각해보기

11. practice11.py
  page 75
  CNN in Keras
    - Keras로 CNN 구현 (MNIST) # Modified National Institute of Standards and Technology
    - 값을 구분하기 위해서 keras.utils.to_categorical 활용
    - CNN 에서 model.evaluate가 어떤 의미인지 확인해보기
    
12. practice12.py
  page 78
  Nework configuration
    - mnist 문제
    - itertools 활용.
    - itertools 활용해서 최적 kernel size, filter 수 선택
    - model.save 활용.
    - system.path.join으로 저장 directory 쉽게 생성

13. practice13.py
  page 80
  Keras for expression recognition
    - csv 파일이 없어서 못 돌려봄.
    - PIL 모듈 사용 ( 이미지 관련 모듈 )

14. practice14.py
  page 91
  Machine learning for NLP
    - nltk 라이브러리 소개
    - nltk.word_tokenize 를 통해서 분리

15. practice15.py
  page 96
  Word embedding in Keras
    - preprocessing에 집중
    - split과 참조를 통해서 sentence 생성
    - set을 통해서 겹치는 부분은 삭제
    - keras.preprocessing.sequence 의 pad_sequences 사용하여 preprocessing
    - Embedding layer 사용
    - Embedding layer 원리도 알아보기

16. practice16.py
  page 101
  Global matrix factorization
    - SVD(Singular Value Decomposition) 활용
    - numpy.linalg.svd 사용
    - 선형대수학 특이값분해 추가로 공부하기
    - numpy.isclose 함수 활용
    
17. practice17.py
  page 106
  Using glove model
    - glove model 사용이지만 import 문제로 실행이 안됨.

18. practice18.py
  page 107
  Text classification with GloVe
    - Text classification 이지만 embeddings_index가 정의되지 않았으므로 실행X
  
